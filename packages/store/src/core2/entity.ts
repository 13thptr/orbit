import { EntityBase, EntityID, EntityType } from "./entities/entityBase";
import { Task } from "./entities/task";

// An entity is an object with a stable identity. Entities aren't created directly; they're a state snapshot generated by applying a series of events.
// Right now, the only type of entity is a task; future entities will probably include "collections", "tags", etc.

export type Entity = Task;
export type { EntityID } from "./entities/entityBase";

export type TypeOfEntity<E extends EntityBase<EntityType, EntityID>> =
  E extends EntityBase<infer Type, any> ? Type : never;

export type IDOfEntity<E extends EntityBase<EntityType, EntityID>> =
  E extends EntityBase<any, infer ID> ? ID : never;
